From 864a0aec0d089d774a9ef1bf796815d740e9162d Mon Sep 17 00:00:00 2001
From: xingweizheng <xingweizheng@huawei.com>
Date: Wed, 12 Jan 2022 16:17:02 +0800
Subject: [PATCH 09/20] fix some mistakes and update doc with version 0.9.6-4

---
 doc/manual_en.md | 102 ++++++++++++++++++++++++-----------------------
 doc/manual_zh.md |  70 +++++++++++++++++---------------
 2 files changed, 90 insertions(+), 82 deletions(-)

diff --git a/doc/manual_en.md b/doc/manual_en.md
index 8fcb333..ab65aec 100644
--- a/doc/manual_en.md
+++ b/doc/manual_en.md
@@ -26,11 +26,11 @@
     * [login: Logging In to the Remote Image Repository](#login-logging-in-to-the-remote-image-repository)
     * [logout: Logging Out of the Remote Image Repository](#logout-logging-out-of-the-remote-image-repository)
     * [version: Querying the isula-build Version](#version-querying-the-isula-build-version)
-    * [manifest: Manage manifest list(experimental feature)](#manifest-Manage-manifest-list)
-        * [create: Create a manifest list](#create-Create-a-manifest-list)
-        * [annotate: Update a manifest list](#annotate-Update-a-manifest-list)
-        * [inspect: Inspect a manifest list](#inspect-Inspect-a-manifest-list)
-        * [push: Push manifest list to repository](#push-Push-manifest-list-to-repository)
+    * [manifest: Manage manifest list(experimental feature)](#manifest-Manifest-List-Management)
+        * [create: Create a manifest list](#create-Manifest-List-Creation)
+        * [annotate: Update a manifest list](#annotate-Manifest-List-Update)
+        * [inspect: Inspect a manifest list](#inspect-Manifest-List-Inspect)
+        * [push: Push manifest list to repository](#push-Manifest-List-Push-to-the-Remote-Repository)
 * [Directly Integrating a Container Engine](#directly-integrating-a-container-engine)
     * [Integration with iSulad](#integration-with-isulad)
     * [Integration with Docker](#integration-with-docker)
@@ -48,7 +48,7 @@ isula-build is a container image build tool developed by the iSula container tea
 
 The isula-build uses the server/client mode. The isula-build functions as a client and provides a group of command line tools for image build and management. The isula-builder functions as the server, processes client management requests, and functions as the daemon process in the background.
 
-![isula-build architecure](./figures/isula-build_arch.png)
+![isula-build architecture](./figures/isula-build_arch.png)
 
 > **Note:**
 >
@@ -80,7 +80,7 @@ Before using isula-build to build a container image, you need to install the fol
 
 **Method 2: Using the RPM Package**
 
-1. Obtain the isula-build-\*.rpm installation package from the openEuler yum source, for example, isula-build-0.9.3-1.oe1.x86_64.rpm.
+1. Obtain the isula-build-*.rpm installation package from the openEuler yum source, for example, isula-build-0.9.6-4.oe1.x86_64.rpm.
 
 2. Upload the obtained RPM software package to any directory on the target server, for example, /home/.
 
@@ -107,7 +107,7 @@ Currently, the isula-build server contains the following configuration file:
 | Configuration Item    | Mandatory or Optional | Description                         | Value                         |
 | --------- | -------- | --------------------------------- | ----------------------------------------------- |
 | debug | Optional | Indicates whether to enable the debug log function. | true: Enable the debug log function. false: Disable the debug log function. |
-| loglevel | Optional | Sets the log level.          | debug, info, warn, error                |
+| loglevel | Optional | Sets the log level.          | debug<br/>info<br/>warn<br/>error                |
 | run_root | Mandatory | Sets the root directory of runtime data. | For example, /var/run/isula-build/ |
 | data_root | Mandatory | Sets the local persistency directory. | For example, /var/lib/isula-build/ |
 | runtime | Optional | Sets the runtime type. Currently, only runc is supported. | runc                                            |
@@ -197,7 +197,7 @@ You can also run the isula-builder command on the server to start the service. T
 Start the isula-build service. For example, to specify the local persistency directory /var/lib/isula-build and disable debugging, run the following command:
 
 ```sh
-sudo isula-builder --dataroot "/var/lib/isula-build"
+sudo isula-builder --dataroot "/var/lib/isula-build" --debug=false
 ```
 
 ## Usage Guidelines
@@ -369,7 +369,7 @@ $ cat testfile
 
 **\-o, --output**
 
-Currently, -o and –output support the following formats:
+Currently, -o and --output support the following formats:
 
 - `isulad:image:tag`: directly pushes the image that is successfully built to iSulad, for example, `-o isulad:busybox:latest`. Pay attention to the following restrictions:
 
@@ -460,7 +460,7 @@ localhost:5000/library/alpine                   latest       a24bb4013296
 
 #### import: Importing a Basic Container Image
 
-openEuler releases a basic container image, for example, openEuler-docker.x86_64.tar.xz, with the version. You can run the `ctr-img import` command to import the image to isula-build.
+A tar file in rootfs form can be imported into isula-build via the `ctr-img import` command.
 
 The command is as follows:
 
@@ -471,13 +471,18 @@ isula-build ctr-img import [flags]
 Example:
 
 ```sh
-$ sudo isula-build ctr-img import ./openEuler-docker.x86_64.tar.xz openeuler:20.09
-Import success with image id: 7317851cd2ab33263eb293f68efee9d724780251e4e92c0fb76bf5d3c5585e37
+$ sudo isula-build ctr-img import busybox.tar mybusybox:latest
+Getting image source signatures
+Copying blob sha256:7b8667757578df68ec57bfc9fb7754801ec87df7de389a24a26a7bf2ebc04d8d
+Copying config sha256:173b3cf612f8e1dc34e78772fcf190559533a3b04743287a32d549e3c7d1c1d1
+Writing manifest to image destination
+Storing signatures
+Import success with image id: "173b3cf612f8e1dc34e78772fcf190559533a3b04743287a32d549e3c7d1c1d1"
 $ sudo isula-build ctr-img images
 ----------------------------------------------  --------------------  -----------------  ------------------------  ------------
 REPOSITORY                                      TAG                   IMAGE ID           CREATED                   SIZE
 ----------------------------------------------  --------------------  -----------------  ------------------------  ------------
-openeuler                                       20.09                 7317851cd2ab       2020-08-01 06:25:34       500 MB
+mybusybox                                       latest                173b3cf612f8       2022-01-12 16:02:31       1.47 MB
 ----------------------------------------------  --------------------  -----------------  ------------------------  ------------
 ```
 
@@ -566,8 +571,8 @@ isula-build ctr-img rm IMAGE [IMAGE...] [FLAGS]
 
 Currently, the following flags are supported:
 
-- -a, –all: deletes all images stored locally.
-- -p, –prune: deletes all images that are stored locally and do not have tags.
+- -a, --all: deletes all images stored locally.
+- -p, --prune: deletes all images that are stored locally and do not have tags.
 
 Example:
 
@@ -774,7 +779,7 @@ You can run the isula-build info command to view the running environment and sys
 
 The following flags are supported:
 
-- -H, –human-readable: Boolean. The memory information is printed in the common memory format. The value is 1000 power.
+- -H, --human-readable: Boolean. The memory information is printed in the common memory format. The value is 1000 power.
 - -V, --verbose: Boolean. The memory usage is displayed during system running.
 
 Example:
@@ -867,39 +872,39 @@ Example:
 You can run the version command to view the current version information.
 
 ```sh
- $ sudo isula-build version
- Client:
-   Version:       0.9.4
-   Go Version:    go1.13.3
-   Git Commit:    0038365c
-   Built:         Tue Nov 24 16:32:05 2020
-   OS/Arch:       linux/amd64
+$ sudo isula-build version
+Client:
+  Version:       0.9.6-4
+  Go Version:    go1.15.7
+  Git Commit:    83274e0
+  Built:         Wed Jan 12 15:32:55 2022
+  OS/Arch:       linux/amd64
 
- Server:
-   Version:       0.9.4
-   Go Version:    go1.13.3
-   Git Commit:    0038365c
-   Built:         Tue Nov 24 16:32:05 2020
-   OS/Arch:       linux/amd64
+Server:
+  Version:       0.9.6-4
+  Go Version:    go1.15.7
+  Git Commit:    83274e0
+  Built:         Wed Jan 12 15:32:55 2022
+  OS/Arch:       linux/amd64
 ```
 
-### manifest: Manage manifest list
+### manifest: Manifest List Management
 
-manifest list includes images refer to different architectures. By using manifest list, users could use the same manifest name(for example: openeuler:latest) in different architectures to get the corresponding image. Manifest includes subcommands create/annotate/inspcet/push.
+The manifest list contains the image information corresponding to different system architectures. You can use the same manifest (for example, openeuler:latest) in different architectures to obtain the image of the corresponding architecture. The manifest contains the create, annotate, inspect, and push subcommands.
 
 > **NOTE:**
 >
-> - manifest is experimental feature, users need to enable experimental features both on client and server, see client overview and configuring the isula-build service sections for details.
+> - manifest is an experiment feature. When using this feature, you need to enable the experiment options on the client and server. For details, see Client Overview and Configuring Services.
 
-####   create: Create a manifest list
+#### create: Manifest List Creation
 
-manifest create subcommand is used to create manifest list. The command is as follows:
+The create subcommand of the manifest command is used to create a manifest list. The command prototype is as follows:
 
 ```
 isula-build manifest create MANIFEST_LIST MANIFEST [MANIFEST...]
 ```
 
-Users could specify manifest list name and images added to list, if no image is specified, an empty list will be created.
+You can specify the name of the manifest list and the remote images to be added to the list. If no remote image is specified, an empty manifest list is created.
 
 Example:
 
@@ -907,25 +912,22 @@ Example:
 $ sudo isula-build manifest create openeuler localhost:5000/openeuler_x86:latest localhost:5000/openeuler_aarch64:latest
 ```
 
-#### annotate: Update a manifest list
+#### annotate: Manifest List Update
 
-manifest annotate subcommand is used to update manifest list. The command is as follows:
+The annotate subcommand of the manifest command is used to update the manifest list. The command prototype is as follows:
 
 ```
 isula-build manifest annotate MANIFEST_LIST MANIFEST [flags]
 ```
 
-Users could specify the manifest list and the image needed to update, with options by flags. This command could also be used to add new image to the list.
+You can specify the manifest list to be updated and the images in the manifest list, and use flags to specify the options to be updated. This command can also be used to add new images to the manifest list.
 
 Currently, the following flags are supported:
 
-```
-Flags:
-  --arch string           Set architecture
-  --os string             Set operating system
-  --os-features strings   Set operating system feature
-  --variant string        Set architecture variant
-```
+- --arch: Applicable architecture of the rewritten image. The value is a string.
+- --os: Indicates the applicable system of the image. The value is a string.
+- --os-features: Specifies the OS features required by the image. This parameter is a string and rarely used.
+- --variant: Variable of the image recorded in the list. The value is a string.
 
 Example:
 
@@ -933,9 +935,9 @@ Example:
 $ sudo isula-build manifest annotate --os linux --arch arm64 openeuler:latest localhost:5000/openeuler_aarch64:latest
 ```
 
-####  inspect: Inspect a manifest list
+#### inspect: Manifest List Inspect
 
-manifest inspect subcommand is used to inspect manifest list. The command is as follows:
+The inspect subcommand of the manifest command is used to query the manifest list. The command prototype is as follows:
 
 ```
 isula-build manifest inspect MANIFEST_LIST
@@ -971,9 +973,9 @@ $ sudo isula-build manifest inspect openeuler:latest
 }
 ```
 
-#### push: Push manifest list to repository
+#### push: Manifest List Push to the Remote Repository.
 
-manifest push subcommand is used to push manifest list to remote repository. The command is as follows:
+The manifest subcommand push is used to push the manifest list to the remote repository. The command prototype is as follows:
 
 ```
 isula-build manifest push MANIFEST_LIST DESTINATION
diff --git a/doc/manual_zh.md b/doc/manual_zh.md
index c5303f8..d3d63b0 100644
--- a/doc/manual_zh.md
+++ b/doc/manual_zh.md
@@ -48,7 +48,7 @@ isula-build是iSula容器团队推出的容器镜像构建工具，支持通过D
 
 isula-build采用服务端/客户端模式，其中，isula-build为客户端，提供了一组命令行工具，用于镜像构建及管理等；isula-builder为服务端，用于处理客户端管理请求，作为守护进程常驻后台。
 
-![isula-build architecure](./figures/isula-build_arch.png)
+![isula-build architecture](./figures/isula-build_arch.png)
 
 > **说明**：
 >
@@ -80,7 +80,7 @@ isula-build采用服务端/客户端模式，其中，isula-build为客户端，
 
 **方法二：使用rpm包安装**
 
-1. 从openEuler yum源中获取isula-build对应安装包isula-build-\*.rpm。例如isula-build-0.9.3-4.oe1.x86_64.rpm。
+1. 从openEuler yum源中获取isula-build对应安装包isula-build-*.rpm。例如isula-build-0.9.6-4.oe1.x86_64.rpm。
 
 2. 将获取的rpm软件包上传至目标服务器的任一目录，例如 /home/。
 
@@ -104,14 +104,14 @@ isula-build采用服务端/客户端模式，其中，isula-build为客户端，
 
 - /etc/isula-build/configuration.toml：isula-builder 总体配置文件，用于设置 isula-builder 日志级别、持久化目录和运行时目录、OCI runtime等。其中各参数含义如下：
 
-| 配置项       | 是否可选 | 配置项含义                                                   | 配置项取值                                      |
-| ------------ | -------- | ------------------------------------------------------------ | ----------------------------------------------- |
-| debug        | 可选     | 设置是否打开debug日志                                        | true：打开debug日志；false：关闭debug日志       |
-| loglevel     | 可选     | 设置日志级别                                                 | debug， info，warn，error                       |
-| run_root     | 必选     | 设置运行时数据根目录                                         | 运行时数据根目录路径，例如/var/run/isula-build/ |
-| data_root    | 必选     | 设置本地持久化目录                                           | 本地持久化目录路径，例如/var/lib/isula-build/   |
-| runtime      | 可选     | 设置runtime种类，目前仅支持runc                              | runc                                            |
-| group        | 可选     | 设置本地套接字isula_build.sock文件属组使得加入该组的非特权用户可以操作isula-build | isula                                           |
+| 配置项    | 是否可选 | 配置项含义                        | 配置项取值                                      |
+| --------- | -------- | --------------------------------- | ----------------------------------------------- |
+| debug     | 可选     | 设置是否打开debug日志             | true：打开debug日志<br/>false：关闭debug日志    |
+| loglevel  | 可选     | 设置日志级别                      | debug<br/>info<br/>warn<br/>error               |
+| run_root  | 必选     | 设置运行时数据根目录              | 运行时数据根目录路径，例如/var/run/isula-build/ |
+| data_root | 必选     | 设置本地持久化目录                | 本地持久化目录路径，例如/var/lib/isula-build/   |
+| runtime   | 可选     | 设置runtime种类，目前仅支持runc   | runc                                            |
+| group     | 可选     | 设置本地套接字isula_build.sock文件属组使得加入该组的非特权用户可以操作isula-build | isula |
 | experimental | 可选     | 设置是否开启实验特性                                         | true：开启实验特性；false：关闭实验特性         |
 
 
@@ -198,7 +198,7 @@ sudo systemctl daemon-reload
 启动 isula-build 服务。例如指定本地持久化路径/var/lib/isula-build，且不开启调试的参考命令如下：
 
 ```sh
-sudo isula-builder --dataroot "/var/lib/isula-build"
+sudo isula-builder --dataroot "/var/lib/isula-build" --debug=false
 ```
 
 ## 使用指南
@@ -370,7 +370,7 @@ $ cat testfile
 
 **\-o, --output**
 
-目前 -o, –output 支持如下形式：
+目前 -o, --output 支持如下形式：
 
 - `isulad:image:tag`：将构建成功的镜像直接推送到 iSulad。比如：`-o isulad:busybox:latest`。同时需要注意如下约束：
 
@@ -457,7 +457,7 @@ localhost:5000/library/alpine                   latest       a24bb4013296
 
 #### import: 导入容器基础镜像
 
-openEuler会随版本发布一个容器基础镜像，比如openEuler-docker.x86_64.tar.xz。可以通过`ctr-img import`指令将它导入到 isula-build。
+可以通过`ctr-img import`指令将rootfs形式的tar文件导入到isula-build中。
 
 命令原型如下：
 
@@ -468,13 +468,18 @@ isula-build ctr-img import [flags]
 使用举例：
 
 ```sh
-$ sudo isula-build ctr-img import ./openEuler-docker.x86_64.tar.xz openeuler:20.09
-Import success with image id: 7317851cd2ab33263eb293f68efee9d724780251e4e92c0fb76bf5d3c5585e37
+$ sudo isula-build ctr-img import busybox.tar mybusybox:latest
+Getting image source signatures
+Copying blob sha256:7b8667757578df68ec57bfc9fb7754801ec87df7de389a24a26a7bf2ebc04d8d
+Copying config sha256:173b3cf612f8e1dc34e78772fcf190559533a3b04743287a32d549e3c7d1c1d1
+Writing manifest to image destination
+Storing signatures
+Import success with image id: "173b3cf612f8e1dc34e78772fcf190559533a3b04743287a32d549e3c7d1c1d1"
 $ sudo isula-build ctr-img images
 ----------------------------------------------  --------------------  -----------------  ------------------------  ------------
 REPOSITORY                                      TAG                   IMAGE ID           CREATED                   SIZE
 ----------------------------------------------  --------------------  -----------------  ------------------------  ------------
-openeuler                                       20.09                 7317851cd2ab       2020-08-01 06:25:34       500 MB
+mybusybox                                       latest                173b3cf612f8       2022-01-12 16:02:31       1.47 MB
 ----------------------------------------------  --------------------  -----------------  ------------------------  ------------
 ```
 
@@ -561,8 +566,8 @@ isula-build ctr-img rm IMAGE [IMAGE...] [FLAGS]
 
 目前支持的 flags 为：
 
-- -a, –all：删除所有本地持久化存储的镜像。
-- -p, –prune：删除所有没有tag的本地持久化存储的镜像。
+- -a, --all：删除所有本地持久化存储的镜像。
+- -p, --prune：删除所有没有tag的本地持久化存储的镜像。
 
 使用示例如下：
 
@@ -863,20 +868,20 @@ $ sudo isula-build info -HV
 可通过version命令查看当前版本信息：
 
 ```sh
- $ sudo isula-build version
- Client:
-   Version:       0.9.4
-   Go Version:    go1.13.3
-   Git Commit:    0038365c
-   Built:         Tue Nov 24 16:32:05 2020
-   OS/Arch:       linux/amd64
-
- Server:
-   Version:       0.9.4
-   Go Version:    go1.13.3
-   Git Commit:    0038365c
-   Built:         Tue Nov 24 16:32:05 2020
-   OS/Arch:       linux/amd64
+$ sudo isula-build version
+Client:
+  Version:       0.9.6-4
+  Go Version:    go1.15.7
+  Git Commit:    83274e0
+  Built:         Wed Jan 12 15:32:55 2022
+  OS/Arch:       linux/amd64
+
+Server:
+  Version:       0.9.6-4
+  Go Version:    go1.15.7
+  Git Commit:    83274e0
+  Built:         Wed Jan 12 15:32:55 2022
+  OS/Arch:       linux/amd64
 ```
 
 ### manifest: manifest列表管理
@@ -1098,6 +1103,7 @@ busybox                                             2.0                 2d414a5c
 | ------------ | ------------ | ---------------------------------- |
 | ctr-img save | -o, --output | string，镜像导出后在本地的存储路径 |
 |              | -f, --format | string，导出层叠镜像的镜像格式：oci｜docker（需开启实验特性选项）|
+
 **表6** login 命令参数列表
 
 | **命令** | **参数**             | **说明**                                                |
-- 
2.27.0

